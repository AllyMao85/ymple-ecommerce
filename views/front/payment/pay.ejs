<% include ../../commun/library.ejs %>

<% include ../templates.navbar.ejs %>

<div class="container">


    <h2> {{__ ( 'payment orders')}} </h2>
      

          <div id="paypal-button"  style="    text-align: -webkit-center;"></div>

    <div style="text-align: center; margin: 150px;">
          
        <% if (order && order.payment && order.payment === 'TRANSFER' && order.status === 'PREPARE') { %>
             <H1><i class="fa fa-fw fa-2x fa-check"> </i></h1>
             <H1> {{__ ( 'Once the order is completed. The payment is confirmed shipment starts.')}} </H1>
             <H3> Account: Woori Bank 1005-102-532536 (Name: gimseokjun) </h3>
             <br>
             <a href="/order/{{ order.id }}" class="btn btn-lg btn-default"> {{__ ( 'Order Confirmation')}} </a>
          
        <% } else if (order && order.payment && order.payment === 'CARD' && order.status === 'PREPARE'){ %>
             <H1><i class="fa fa-fw fa-2x fa-spin fa-refresh"> </i></h1>
             <H1> {{(order.price + order.shipping) | currency}} {{__ ( '. Is in progress payments')}} </h1>
             <H3> {{__ ( 'Do not close the page and go to another site.')}} </H3>
          
        <% } else { %>
             <H1><i class="fa fa-fw fa-2x fa-ban"> </i></h1>
             <H1> {{__ ( 'hasyeotgeona payment order is already canceled.')}} </H1>
          
        <% } %>
          
    </div>


    <script src="https://www.paypalobjects.com/api/checkout.js"></script>

    <script>
        paypal.Button.render({

            env: 'sandbox', //'production', // Optional: specify 'sandbox' environment

            client: {
                production:'EBWKjlELKMYqRNQ6sYvFo64FtaRLRR5BdHEESmha49TM',
                sandbox: 'EBWKjlELKMYqRNQ6sYvFo64FtaRLRR5BdHEESmha49TM'
            },

            payment: function() {

                var env    = this.props.env;
                var client = this.props.client;

                return paypal.rest.payment.create(env, client, {
                    transactions: [
                        {
                            amount: { total: '0.01', currency: 'EUR' }
                        }
                    ]
                });
            },

            commit: true, // Optional: show a 'Pay Now' button in the checkout flow

            onAuthorize: function(data, actions) {

                // Optional: display a confirmation page here
                console.log('payment ok');
                return actions.payment.execute().then(function() {



                    // Show a success page to the buyer
                });
            }

        }, '#paypal-button');
    </script>
</div>


<% if (sails.config.project.paymentMethods.iamport.using){ %>
<% if (order.payment === 'CARD' && order.status === 'PREPARE'){ %>
<script type="text/javascript" src="https://service.iamport.kr/js/iamport.payment.js"></script>

<script type="text/javascript">
    var IMP = window.IMP;
    IMP.init('{{ sails.config.project.paymentMethods.iamport.id }}');

    var payment = {
        merchant_uid: '{{ order.id }}',
        name: '{{ order.id }}',
        amount: '{{ order.price+order.shipping }}',
        buyer_email: '{{ order.email }}',
        buyer_name: '{{ order.name }}',
        buyer_tel: '{{ order.phone }}',
        buyer_addr: '{{ order.address }}',
        buyer_postcode: '{{ order.postcode }}'
    };

    IMP.request_pay(payment, function (rsp) {
        var msg;

        if (rsp.success) {


            msg = 'Your payment has been successfully completed.';
            msg += 'Payments:' + rsp.paid_amount;
            msg += ', the card approval number:' + rsp.apply_num;


            $.ajax({
                type: 'POST',
                url: '/order/paid',
                data: rsp,
                success: function (data, success) {
                    alert(msg);
                    window.location = '/order/{{ order.id }}';
                },
                error: function (error) {
                    return alert(error);
                }
            });
        } else {
            if (rsp.error_code === 'STOP') {
                // Payment cancelled during process
                msg = 'You cancel payments.'
                alert(msg);
                window.location = '/profile';
                return;
            }
            msg = 'failed payment.';
            msg += 'Error description:' + rsp.error_msg;

            if (alert(msg))
                window.location = '/order/{{ order.id }}';
        }
    });
</script>
<% } %>
<% } %>

